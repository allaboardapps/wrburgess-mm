<!doctype html>
<html lang="en">
  <head>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=<%= config[:ga_id] %>"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', '<%= config[:ga_id] %>');
    </script>
    <title>
      <%= current_page.data.title == "Home" ? "#{config[:site_name]} | Home" : "#{current_page.data.title} | #{config[:site_name]}" %>
    </title>
    <meta name="google-site-verification" content="C_xNR_BHNO1V5WrzHAaMQROpL7pkRZgV8Tkqlcyep9E" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="<%= config[:site_description] %>">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="/manifest.json">
    <link rel="apple-touch-icon" sizes="180x180" href="<%= image_path('apple-touch-icon.png') %>">
    <link rel="icon" type="image/png" sizes="32x32" href="<%= image_path('favicon-32x32.png') %>">
    <link rel="icon" type="image/png" sizes="16x16" href="<%= image_path('favicon-16x16.png') %>">
    <link rel="icon" type="image/png" sizes="16x16" href="<%= image_path('android-chrome-192x192.png') %>">
    <link rel="icon" type="image/png" sizes="16x16" href="<%= image_path('android-chrome-512x512.png') %>">
    <meta name="theme-color" content="#a4cdfa">
    <link rel="alternate" type="application/rss+xml" title="RSS" href='<%= "#{config[:site_url]}/rss.xml" %>' />
    <link rel='preload' href='<%= url_for "/stylesheets/site.css" %>' as='style' onload='this.onload=null;this.rel="stylesheet"'>
    <script type="text/javascript">
      WebFontConfig = {
        google: {
          families: ['Roboto+Slab:400,700', 'Heebo:700,900']
        }
      };
      (function(d) {
        var wf = d.createElement('script'), s = d.scripts[0];
        wf.src = 'https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js';
        wf.async = true;
        s.parentNode.insertBefore(wf, s);
      })(document);
    </script>
  </head>
  <body>
    <%= yield %>
    <script type="text/javascript">
      (function( w ){
        "use strict";
        // rel=preload support test
        if( !w.loadCSS ){
          w.loadCSS = function(){};
        }
        // define on the loadCSS obj
        var rp = loadCSS.relpreload = {};
        // rel=preload feature support test
        // runs once and returns a function for compat purposes
        rp.support = (function(){
          var ret;
          try {
            ret = w.document.createElement( "link" ).relList.supports( "preload" );
          } catch (e) {
            ret = false;
          }
          return function(){
            return ret;
          };
        })();

        // if preload isn't supported, get an asynchronous load by using a non-matching media attribute
        // then change that media back to its intended value on load
        rp.bindMediaToggle = function( link ){
          // remember existing media attr for ultimate state, or default to 'all'
          var finalMedia = link.media || "all";

          function enableStylesheet(){
            link.media = finalMedia;
          }

          // bind load handlers to enable media
          if( link.addEventListener ){
            link.addEventListener( "load", enableStylesheet );
          } else if( link.attachEvent ){
            link.attachEvent( "onload", enableStylesheet );
          }

          // Set rel and non-applicable media type to start an async request
          // note: timeout allows this to happen async to let rendering continue in IE
          setTimeout(function(){
            link.rel = "stylesheet";
            link.media = "only x";
          });
          // also enable media after 3 seconds,
          // which will catch very old browsers (android 2.x, old firefox) that don't support onload on link
          setTimeout( enableStylesheet, 3000 );
        };

        // loop through link elements in DOM
        rp.poly = function(){
          // double check this to prevent external calls from running
          if( rp.support() ){
            return;
          }
          var links = w.document.getElementsByTagName( "link" );
          for( var i = 0; i < links.length; i++ ){
            var link = links[ i ];
            // qualify links to those with rel=preload and as=style attrs
            if( link.rel === "preload" && link.getAttribute( "as" ) === "style" && !link.getAttribute( "data-loadcss" ) ){
              // prevent rerunning on link
              link.setAttribute( "data-loadcss", true );
              // bind listeners to toggle media back
              rp.bindMediaToggle( link );
            }
          }
        };

        // if unsupported, run the polyfill
        if( !rp.support() ){
          // run once at least
          rp.poly();

          // rerun poly on an interval until onload
          var run = w.setInterval( rp.poly, 500 );
          if( w.addEventListener ){
            w.addEventListener( "load", function(){
              rp.poly();
              w.clearInterval( run );
            } );
          } else if( w.attachEvent ){
            w.attachEvent( "onload", function(){
              rp.poly();
              w.clearInterval( run );
            } );
          }
        }


        // commonjs
        if( typeof exports !== "undefined" ){
          exports.loadCSS = loadCSS;
        }
        else {
          w.loadCSS = loadCSS;
        }
      }( typeof global !== "undefined" ? global : this ) );
    </script>
    <%= javascript_include_tag "site" %>
  </body>
</html>
